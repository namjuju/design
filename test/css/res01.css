@font-face {
    font-family: 'Pretendard';
    font-weight: 400;
    font-display: swap;
    src: local('Pretendard Regular'), url(../fonts/Pretendard-Regular.woff2) format('woff2'), url(../fonts/Pretendard-Regular.woff) format('woff');
}
@font-face {
    font-family: 'Pretendard';
    font-weight: 700;
    font-display: swap;
    src: local('Pretendard Bold'), url(../fonts/Pretendard-Bold.woff2) format('woff2'), url(../fonts/Pretendard-Bold.woff) format('woff');
}
@font-face {
    font-family: 'Pretendard';
    font-weight: 900;
    font-display: swap;
    src: local('Pretendard Black'), url(../fonts/Pretendard-Black.woff2) format('woff2'), url(../fonts/Pretendard-Black.woff) format('woff');
}
html, body {
    font-family: 'Pretendard', sans-serif; /* 서체 */
    font-size: 16px; /* 크기 */
    color: #1e1e1e; /* 글자색상 */
    font-weight: 400; /* 글자의 두께 */
    line-height: 1.2; /* auto */
    word-break: keep-all; /* 단어를 묶어서 줄바꿈 */
    letter-spacing: -0.05em; /* 자간 */
}
.wrapper { /* 홈페이지의 넓이를 제한하고 가운데 정렬 */
    width: 1280px; /* 홈페이지 넓이 */
    margin: 0 auto;  /* 가운데 정렬 */
}
#wrap { /* id="wrap"에 적용되는 스타일 */
    min-width: 1280px;
    /* PC형에서 wrapper사이즈보다 브라우저 넓이가 작을때
       가로스크롤바가 생성되는데 오른쪽에 background가 
       짤리는 현상이 생김.  
       가로스크롤바가 생성되었을때도 홈페이지를 정상적으로 
       서비스 하기 위해서 최소 넓이를 입력 */
}
/* 브라우저 사이즈 640px이하 일때만 적용되는 스타일 
   1. pc와 선택자가 동일해야함. 선택자가 달라지면 
      css 우선순위가 변경되어 적용되지 않을 수도 있음 
   2. 모바일은 pc버전 스타일을 그대로 상속 받기 때문에 
      변경되는 부분만 스타일을 적용해야 한다.
   3. 모바일 스타일은 pc스타일 아래 선언되어야 합니다 
       css는 위에서 아래로 순차적으로 적용됨. 
*/
@media screen and (max-width:640px){
    html, body {
        font-size: 13px; /* 크기 */
    }
    .wrapper { 
        width: auto;
        /* pc버전에서 준 넓이값 해제(취소) 
        - block요소라면 넓이가 100%되는 것  */
        margin: 0 20px;
        /* 모바일에서는 좌우에 20px을 준다. */
    }
    #wrap {
        min-width: 320px;/* 모바일 최소사이즈 */
    }
}/*media*/
/* 태그초기화 - 태그의 기본스타일 제거 */
* {
    padding: 0; /* 모든 태그의 여백삭제 */
    margin: 0;
    box-sizing: border-box;
    /* padding하고 border는 넓이를 늘리는 요소인데 넓이를 늘리지 않도록 하는 속성 */
}
ul, ol, li { 
    list-style: none; /* ul li앞에 동그라미 삭제 */
}
a { /* a태그는 파란색에 underline이 기본적으로 생성됨 */
    text-decoration: none; /* underline 제거 */
    color: inherit; 
    /* 색상은 상속받아 - 파란색 말고 누군가가 상속해준 스타일을 적용  */
}
address, em {
    /* em태그와 address태그는 기본적으로 글자가 기울어짐 
       디자인상 기울어짐을 사용하기 위해서 쓰지 않음
       최근 기울어짐 디자인을 하지 않음 
       그래서 태그에 있는 기본 기울어짐을 초기화 함 */
    font-style: normal;
}
/*글자를 두껍게 하고 글자크기를 조정하는 태그
본래의 기능을 초기화시키고 body값을 적용시크는 것 */
h1, h2, h3, h4, h5, h6, strong {
    font-size: inherit;
    font-weight: inherit;
}
/* button태그는 기본스타일 많음 */
button {
    background-color: transparent; /*배경투명*/
    border: 0; /*테두리삭제*/
    color: inherit; /*브라우저가 주는 값 삭제*/
    font-family: inherit; /*버튼은 서체도 바뀜 - 상속 */
}

.notice {
    margin: 80px 0 0 0;
}
.notice h2 {
    font-size: 42px;
    font-weight: 400;
    color: #aaa;
    margin-bottom: 22px;
}
.notice h2 strong {
    color: #1e1e1e;
}
.notice ul {
display: flex;
justify-content: space-between;
}
.notice ul li {
    width: 299px;
}
/* a태그안에 많은 요소들이 들어가면 display를 주는게 좋음 */
.notice ul li a {
    display: block;
}
.notice ul li a strong {
    display: block;
    /* 제목은 strong, 날짜는 span으로 - 디자인상 줄바꿈 필요
    이때 display:block; 각 요소가 block요소로 변경되어 둘이 
    한줄에 나타나지 않음  */
    margin: 8px 0;
}
.notice ul li a span {
    display: block;
    color: #aaa;
}
.notice .notice_wrap {
    position: relative;
    /*more 정렬의 중심*/
}
.notice .more {
    /*.notice_wrap 영역기준으로*/
    position: absolute;
    right: 0;
    top: 44px;
}
.notice .more a {
    border: 1px solid #bbb;
    border-radius: 30px; /* 높이의 절반 */
    line-height: 51px;
    /* 버튼은 line-height의 높이를 갖고 
    글자도 위아래 가운데 정렬함 */
    padding: 0 33px;
    display: block;
}
/* a태그에 마우스를 오버했을때 */
.notice .more a:hover {
    background-color: #1d1d1d;
    border: 1px solid #1d1d1d;
    color: #fff;
}
@media screen and (max-width:640px){
    .notice {
        margin: 55px 0 0 0;
    }
    .notice h2 {
        font-size: 25px;
        margin-bottom: 25px;
    }
    .notice ul {
    display: block;
    }
    .notice ul li {
        width: auto;
        /*넓이값을 지우고 원래 속성대로 넓이를 갖게 하는 값*/
        margin-bottom: 20px;
    }
    /* a태그안에 많은 요소들이 들어가면 display를 주는게 좋음 */
    .notice ul li a {
        display: flex;
        align-items: flex-start;
        /*왼쪽에 이미지, 오른쪽에 글자가 배치되도록 플렉스*/
        justify-content: space-between;
    }
    .notice ul li a img {
        width: 96px;
        /*이미지 크기를 조정하려면 반드시 img에 width/height를 줘야한다.
        감싸는 요소에 줘도 안들어감
        넓이나 높이 하나만 줘도 나머지는 알아서 비율에 맞게 적용
        그래서 넓이나 높이 하나만 줌 / 둘다주면 비율이 깨짐*/
    }
    /*왼쪽에 이미지와 여백은 고정값
    오른쪽에 글자는 브라우저 사이즈에 따라서 늘어났다가 줄어듬
    그러면 전체 넓이 100%에서 왼쪽이미지 넓이 + 여백을 뺀 값이 글자의 넓이가 됨*/
    .notice ul li a .inner {
        width: calc(100% - 112px);
    }
    .notice ul li a strong {
        font-size: 15px;
        margin: 0 0 3px 0;
        /*제목을 무조건 2줄로 제한*/
        line-height: 1.2;
        height: 2.4em; /*행간에 X2 한 값에 단위는 em*/
        overflow: hidden;
        /*높이를 제한했기 때문에 높이에서 벗어나는 글자는 숨김*/
    }
    .notice .more {
        /*absolute를 해제하고 원래 코딩순서대로 아래에 배치*/
        position: relative;
        right: auto;/*right , top 해제는 auto*/
        top: auto;
        margin: 35px 0 0 0;
        text-align: center;
        /*width가 넓은 요소에서 인라인 요소를 가운데 정렬 가장 빠른것은
          text-align: center*/
    }
    .notice .more a {
        border-radius: 20px; /* 높이의 절반 */
        line-height: 37px;
        /* 버튼은 line-height의 높이를 갖고 
        글자도 위아래 가운데 정렬함 */
        padding: 0 35px;
        display:inline-block;
    }
}/* media */

.news {
    margin: 80px 0 0 0;
}
.news h2 {
    font-size: 42px;
    font-weight: 400;
    color: #aaa;
    margin-bottom: 22px;
}
.news h2 strong {
    color: #1e1e1e;
}
.news ul {
    display: flex;
    justify-content: space-between;
}
.news ul li {
    width: 299px;
}
/* a태그안에 많은 요소들이 들어가면 display를 주는게 좋음 */
.news ul li a {
    display: block;
}
.news ul li a strong {
    display: block; 
    /* 제목은 strong, 날짜는 span으로 - 디자인상 줄바꿈 필요
    이때 display:block; 각 요소가 block요소로 변경되어 둘이 
    한줄에 나타나지 않음  */
    margin: 8px 0;
}
.news ul li a span {
    display: block;
    color: #aaa;
}
.news .notice_wrap {
    position: relative;
    /* more정렬의 중심 */
}
.news .more {
    /*.notice_wrap 영역기준으로*/
    position: absolute;
    right: 0;
    top: 44px;
}
.news .more a {
    border: 1px solid #bbb;
    border-radius: 30px; /* 높이의 절반 */
    line-height: 51px;
    /* 버튼은 line-height의 높이를 갖고 
    글자도 위아래 가운데 정렬함 */
    padding: 0 33px;
    display: block;
}
/* a태그에 마우스를 오버했을때 */
.news .more a:hover {
    background-color: #1d1d1d;
    border: 1px solid #1d1d1d;
    color: #fff;
}
@media screen and (max-width:640px) {
    .news {
        margin: 45px 0 0 0;
    }
    .news h2 {
        font-size: 25px;
        margin-bottom: 14px;
    }
    .news h2 br{
        display: none;
    }
    .news ul {
        flex-wrap: wrap;
        /*한줄에 2개의 레이아웃으로 변경할때
        플렉스를 유지하고 flex-wrap: wrap
        줄바꿈 허용*/
    }
    .news ul li {
        width: calc(50% - 8px);
        margin-bottom: 20px;
    }
    /* a태그안에 많은 요소들이 들어가면 display를 주는게 좋음 */
    .news ul li a img {
        width: 100%;
    }
    .news ul li a strong {
        margin: 8px 0;
        line-height: 1.2;
        height: 2.4em;
        overflow: hidden;
    }
    .news .more {
        /*.notice_wrap 영역기준으로*/
        position: relative;
        right: auto;
        top: auto;
        margin: 20px 0 50px 0;
        text-align: center;
    }
    .news .more a {
        border-radius: 20px; /* 높이의 절반 */
        line-height: 37px;
        /* 버튼은 line-height의 높이를 갖고 
        글자도 위아래 가운데 정렬함 */
        padding: 0 35px;
        display: inline-block;
    }
}/*media*/